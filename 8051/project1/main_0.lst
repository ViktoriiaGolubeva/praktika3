

HI-TECH Software 8051 Macro Assembler V9.60                                Page 1
                                                       Thu Mar 16 19:47:39 2023

     1                           	psect	idata,class=DATA,space=1,limit=080h
     2                           	psect	irdata,class=DATA,limit=080h
     3                           	global	_s1out
     4                           	signat	_s1out,8312
     5                           	global	stack_internal
     6                           	psect	text,class=CODE
     7                           	psect	text
     8                           	file	"C:\Users\class\DOCUME~1\NATION~1\CIRCUI~1
                                 .0\MCUWOR~1\3PRAK~1\8051\project1\main.c"
     9                           	line	4
    10  00114                     _s1out:
    11  00114  02 027A            	j	f1411
    12  00117                     f1410:
    13                           ;main.c: 3: void s1out(short position,short maxP
                                 osition)
    14                           
    15                           ;main.c: 4: {
    16                           
    17                           	psect	data,class=CODE
    18                           	psect	data
    19  00100                     F158:
    20  00100  00A2               	dw	(162)
    21  00102  00A9               	dw	(169)
    22  00104  00AB               	dw	(171)
    23  00106  00B3               	dw	(179)
    24  00108  00AF               	dw	(175)
    25  0010A  00B1               	dw	(177)
    26  0010C  00A9               	dw	(169)
    27  0010E  00C0               	dw	(192)
    28                           ;	var   _str assigned to ?a_s1out+0
    29                           ;main.c: 5: short str[8]={160+2,160+9,160+11,160
                                 +19,160+15,160+17,160+9,160+32};
    30                           
    31                           ;	var   _maxPosition assigned to ?a_s1out+16
    32                           ;_maxPosition stored from WR1
    33                           	psect	text
    34                           	line	5
    35  00117  8A 34              	mov	?a_s1out+16,r2
    36  00119  8B 35              	mov	?a_s1out+16+1,r3
    37                           ;	var   _position assigned to ?a_s1out+18
    38                           ;_position stored from WR2
    39  0011B  8C 36              	mov	?a_s1out+18,r4
    40  0011D  8D 37              	mov	?a_s1out+18+1,r5
    41  0011F  78 01              	mov	r0,#high (F158)
    42  00121  79 00              	mov	r1,#low (F158)
    43  00123  7A 00              	mov	r2,#high (?a_s1out+0)
    44  00125  7B 24              	mov	r3,#low (?a_s1out+0)
    45  00127  7D 10              	mov	r5,#low 16
    46  00129  7C 00              	mov	r4,#high 16
    47                           	global	str_copy
    48  0012B  12 008C            	lcall	str_copy
    49                           ;	var   _i assigned to ?a_s1out+20
    50                           ;main.c: 6: unsigned int i=0;
    51                           
    52                           	line	6
    53  0012E  E4                 	clr	a
    54  0012F  F5 38              	mov	?a_s1out+20,a
    55  00131  F5 39              	mov	?a_s1out+20+1,a
    56                           ;	var   _length assigned to ?a_s1out+22
    57                           ;main.c: 7: unsigned short length = 8;
    58                           
    59                           	line	7
    60  00133  75 3A  00          	mov	?a_s1out+22,#high(8)
    61  00136  75 3B  08          	mov	?a_s1out+22+1,#low(8)
    62                           ;	var   _current assigned to ?a_s1out+24
    63                           ;main.c: 8: short current = 0;
    64                           
    65                           	line	8
    66  00139  E4                 	clr	a
    67  0013A  F5 3C              	mov	?a_s1out+24,a
    68  0013C  F5 3D              	mov	?a_s1out+24+1,a
    69                           ;main.c: 9: P0=0x80;
    70                           
    71                           	line	9
    72  0013E  75 80 80           	mov	080h,#128
    73                           ;main.c: 10: P2=0x1;
    74                           
    75                           	line	10
    76  00141  75 A0 01           	mov	0A0h,#1
    77                           ;main.c: 11: P2=0x0;
    78                           
    79                           	line	11
    80  00144  75 A0 00           	mov	0A0h,#0
    81                           ;main.c: 13: if(position+length>maxPosition)
    82                           
    83                           	line	13
    84  00147  E5 37              	mov	a,?a_s1out+18+1
    85  00149  25 3B              	add	a,?a_s1out+22+1
    86  0014B  FD                 	mov	r5,a
    87  0014C  E5 36              	mov	a,?a_s1out+18
    88  0014E  35 3A              	addc	a,?a_s1out+22
    89  00150  FC                 	mov	r4,a
    90  00151  EC                 	mov	a,r4
    91  00152  B5 34  06          	cbne	a,?a_s1out+16,u12
    92  00155  ED                 	mov	a,r5
    93  00156  B5 35  02          	cbne	a,?a_s1out+16+1,u12
    94  00159  80 04              	jmp	u11
    95  0015B                     u12:
    96  0015B  50 05              	bnc	u10
    97  0015D  80 00              	jmp	u11
    98  0015F                     u11:
    99  0015F  02 01EA            	jmp	l4
   100  00162                     u10:
   101                           ;main.c: 14: {
   102                           
   103                           ;main.c: 15: for(i=length-(position+length-maxPo
                                 sition);i<length;i++)
   104                           
   105                           	line	15
   106  00162  E5 37              	mov	a,?a_s1out+18+1
   107  00164  25 3B              	add	a,?a_s1out+22+1
   108  00166  FD                 	mov	r5,a
   109  00167  E5 36              	mov	a,?a_s1out+18
   110  00169  35 3A              	addc	a,?a_s1out+22
   111  0016B  FC                 	mov	r4,a
   112  0016C  ED                 	mov	a,r5
   113  0016D  C3                 	clr	c
   114  0016E  95 35              	subb	a,?a_s1out+16+1
   115  00170  FD                 	mov	r5,a
   116  00171  EC                 	mov	a,r4
   117  00172  95 34              	subb	a,?a_s1out+16
   118  00174  FC                 	mov	r4,a
   119  00175  E5 3B              	mov	a,?a_s1out+22+1
   120  00177  C3                 	clr	c
   121  00178  9D                 	subb	a,r5
   122  00179  F5 39              	mov	?a_s1out+20+1,a
   123  0017B  E5 3A              	mov	a,?a_s1out+22
   124  0017D  9C                 	subb	a,r4
   125  0017E  F5 38              	mov	?a_s1out+20,a
   126  00180  80 39              	jmp	l8
   127                           	line	16
   128  00182                     l5:
   129                           ;main.c: 16: {
   130                           
   131                           ;main.c: 17: if(current == maxPosition) break;
   132                           
   133                           	line	17
   134  00182  E5 3D              	mov	a,?a_s1out+24+1
   135  00184  B5 35  07          	cbne	a,?a_s1out+16+1,u21
   136  00187  E5 3C              	mov	a,?a_s1out+24
   137  00189  B5 34  02          	cbne	a,?a_s1out+16,u21
   138  0018C  80 02              	jmp	u20
   139  0018E                     u21:
   140  0018E  80 02              	jmp	l9
   141  00190                     u20:
   142  00190  80 3B              	jmp	l6
   143  00192                     l9:
   144                           ;main.c: 18: current++;
   145                           
   146                           	line	18
   147  00192  05 3D              	inc	?a_s1out+24+1
   148  00194  E5 3D              	mov	a,?a_s1out+24+1
   149  00196  70 02              	jnz	u30
   150  00198  05 3C              	inc	?a_s1out+24
   151  0019A                     u30:
   152                           ;main.c: 19: P0=str[i];
   153                           
   154                           	line	19
   155  0019A  A8 38              	mov	r0,?a_s1out+20
   156  0019C  A9 39              	mov	r1,?a_s1out+20+1
   157  0019E  E9                 	mov	a,r1
   158  0019F  C3                 	clr	c
   159  001A0  33                 	rlc	a
   160  001A1  F9                 	mov	r1,a
   161  001A2  E8                 	mov	a,r0
   162  001A3  33                 rlc	a
   163  001A4  F8                 	mov	r0,a
   164                           
   165  001A5  74 24              	mov	a,#?a_s1out+0
   166  001A7  29                 	add	a,r1
   167  001A8  24 01              	add	a,#01h
   168  001AA  F9                 	mov	r1,a
   169  001AB  87 80              	mov	080h,@r1
   170                           ;main.c: 20: P2=0x3;
   171                           
   172                           	line	20
   173  001AD  75 A0 03           	mov	0A0h,#3
   174                           ;main.c: 21: P2=0x2;
   175                           
   176                           	line	21
   177  001B0  75 A0 02           	mov	0A0h,#2
   178                           	line	15
   179  001B3  05 39              	inc	?a_s1out+20+1
   180  001B5  E5 39              	mov	a,?a_s1out+20+1
   181  001B7  70 02              	jnz	u40
   182  001B9  05 38              	inc	?a_s1out+20
   183  001BB                     u40:
   184  001BB                     l8:
   185  001BB  E5 3A              	mov	a,?a_s1out+22
   186  001BD  B5 38  07          	cbne	a,?a_s1out+20,u52
   187  001C0  E5 3B              	mov	a,?a_s1out+22+1
   188  001C2  B5 39  02          	cbne	a,?a_s1out+20+1,u52
   189  001C5  80 06              	jmp	u50
   190  001C7                     u52:
   191  001C7  50 02              	bnc	u51
   192  001C9  80 02              	jmp	u50
   193  001CB                     u51:
   194  001CB  80 B5              	jmp	l5
   195  001CD                     u50:
   196  001CD                     l6:
   197                           ;main.c: 22: }
   198                           
   199                           ;main.c: 23: i = (position+length-maxPosition)-1
                                 ;
   200                           
   201                           	line	23
   202  001CD  E5 37              	mov	a,?a_s1out+18+1
   203  001CF  25 3B              	add	a,?a_s1out+22+1
   204  001D1  FD                 	mov	r5,a
   205  001D2  E5 36              	mov	a,?a_s1out+18
   206  001D4  35 3A              	addc	a,?a_s1out+22
   207  001D6  FC                 	mov	r4,a
   208  001D7  ED                 	mov	a,r5
   209  001D8  C3                 	clr	c
   210  001D9  95 35              	subb	a,?a_s1out+16+1
   211  001DB  FD                 	mov	r5,a
   212  001DC  EC                 	mov	a,r4
   213  001DD  95 34              	subb	a,?a_s1out+16
   214  001DF  FC                 	mov	r4,a
   215  001E0  ED                 	mov	a,r5
   216  001E1  24 FF              	add	a,#0FFh
   217  001E3  F5 39              	mov	?a_s1out+20+1,a
   218  001E5  EC                 	mov	a,r4
   219  001E6  34 FF              	addc	a,#0FFh
   220  001E8  F5 38              	mov	?a_s1out+20,a
   221                           	line	24
   222  001EA                     l4:
   223                           ;main.c: 24: }
   224                           
   225                           ;main.c: 26: for(;i<position; i++)
   226                           
   227                           	line	26
   228  001EA  80 29              	jmp	l13
   229                           	line	27
   230  001EC                     l10:
   231                           ;main.c: 27: {
   232                           
   233                           ;main.c: 28: if(current == maxPosition) break;
   234                           
   235                           	line	28
   236  001EC  E5 3D              	mov	a,?a_s1out+24+1
   237  001EE  B5 35  07          	cbne	a,?a_s1out+16+1,u61
   238  001F1  E5 3C              	mov	a,?a_s1out+24
   239  001F3  B5 34  02          	cbne	a,?a_s1out+16,u61
   240  001F6  80 02              	jmp	u60
   241  001F8                     u61:
   242  001F8  80 02              	jmp	l14
   243  001FA                     u60:
   244  001FA  80 2B              	jmp	l11
   245  001FC                     l14:
   246                           ;main.c: 29: current++;
   247                           
   248                           	line	29
   249  001FC  05 3D              	inc	?a_s1out+24+1
   250  001FE  E5 3D              	mov	a,?a_s1out+24+1
   251  00200  70 02              	jnz	u70
   252  00202  05 3C              	inc	?a_s1out+24
   253  00204                     u70:
   254                           ;main.c: 30: P0=6;
   255                           
   256                           	line	30
   257  00204  75 80 06           	mov	080h,#6
   258                           ;main.c: 31: P2=0x3;
   259                           
   260                           	line	31
   261  00207  75 A0 03           	mov	0A0h,#3
   262                           ;main.c: 32: P2=0x2;
   263                           
   264                           	line	32
   265  0020A  75 A0 02           	mov	0A0h,#2
   266                           	line	26
   267  0020D  05 39              	inc	?a_s1out+20+1
   268  0020F  E5 39              	mov	a,?a_s1out+20+1
   269  00211  70 02              	jnz	u80
   270  00213  05 38              	inc	?a_s1out+20
   271  00215                     u80:
   272  00215                     l13:
   273  00215  E5 36              	mov	a,?a_s1out+18
   274  00217  B5 38  07          	cbne	a,?a_s1out+20,u92
   275  0021A  E5 37              	mov	a,?a_s1out+18+1
   276  0021C  B5 39  02          	cbne	a,?a_s1out+20+1,u92
   277  0021F  80 06              	jmp	u90
   278  00221                     u92:
   279  00221  50 02              	bnc	u91
   280  00223  80 02              	jmp	u90
   281  00225                     u91:
   282  00225  80 C5              	jmp	l10
   283  00227                     u90:
   284  00227                     l11:
   285                           ;main.c: 33: }
   286                           
   287                           ;main.c: 34: for (i=0;i<length;i++)
   288                           
   289                           	line	34
   290  00227  E4                 	clr	a
   291  00228  F5 38              	mov	?a_s1out+20,a
   292  0022A  F5 39              	mov	?a_s1out+20+1,a
   293  0022C  80 39              	jmp	l18
   294                           	line	35
   295  0022E                     l15:
   296                           ;main.c: 35: {
   297                           
   298                           ;main.c: 36: if(current == maxPosition) break;
   299                           
   300                           	line	36
   301  0022E  E5 3D              	mov	a,?a_s1out+24+1
   302  00230  B5 35  07          	cbne	a,?a_s1out+16+1,u101
   303  00233  E5 3C              	mov	a,?a_s1out+24
   304  00235  B5 34  02          	cbne	a,?a_s1out+16,u101
   305  00238  80 02              	jmp	u100
   306  0023A                     u101:
   307  0023A  80 02              	jmp	l19
   308  0023C                     u100:
   309  0023C  80 3B              	jmp	l16
   310  0023E                     l19:
   311                           ;main.c: 37: current++;
   312                           
   313                           	line	37
   314  0023E  05 3D              	inc	?a_s1out+24+1
   315  00240  E5 3D              	mov	a,?a_s1out+24+1
   316  00242  70 02              	jnz	u110
   317  00244  05 3C              	inc	?a_s1out+24
   318  00246                     u110:
   319                           ;main.c: 38: P0 = str[i];
   320                           
   321                           	line	38
   322  00246  A8 38              	mov	r0,?a_s1out+20
   323  00248  A9 39              	mov	r1,?a_s1out+20+1
   324  0024A  E9                 	mov	a,r1
   325  0024B  C3                 	clr	c
   326  0024C  33                 	rlc	a
   327  0024D  F9                 	mov	r1,a
   328  0024E  E8                 	mov	a,r0
   329  0024F  33                 rlc	a
   330  00250  F8                 	mov	r0,a
   331                           
   332  00251  74 24              	mov	a,#?a_s1out+0
   333  00253  29                 	add	a,r1
   334  00254  24 01              	add	a,#01h
   335  00256  F9                 	mov	r1,a
   336  00257  87 80              	mov	080h,@r1
   337                           ;main.c: 39: P2=0x3;
   338                           
   339                           	line	39
   340  00259  75 A0 03           	mov	0A0h,#3
   341                           ;main.c: 40: P2=0x2;
   342                           
   343                           	line	40
   344  0025C  75 A0 02           	mov	0A0h,#2
   345                           	line	34
   346  0025F  05 39              	inc	?a_s1out+20+1
   347  00261  E5 39              	mov	a,?a_s1out+20+1
   348  00263  70 02              	jnz	u120
   349  00265  05 38              	inc	?a_s1out+20
   350  00267                     u120:
   351  00267                     l18:
   352  00267  E5 3A              	mov	a,?a_s1out+22
   353  00269  B5 38  07          	cbne	a,?a_s1out+20,u132
   354  0026C  E5 3B              	mov	a,?a_s1out+22+1
   355  0026E  B5 39  02          	cbne	a,?a_s1out+20+1,u132
   356  00271  80 06              	jmp	u130
   357  00273                     u132:
   358  00273  50 02              	bnc	u131
   359  00275  80 02              	jmp	u130
   360  00277                     u131:
   361  00277  80 B5              	jmp	l15
   362  00279                     u130:
   363  00279                     l16:
   364                           ;main.c: 41: }
   365                           
   366                           ;main.c: 42: }
   367                           
   368                           	line	42
   369  00279                     l3:
   370  00279  22                 	ret
   371  0027A                     f1411:
   372  0027A  02 0117            	j	f1410
   373                           	FNSIZE	_s1out,26,0
   374                           	global	?a_s1out
   375  0000                     f1412	equ	0
   376                           	global	_s2out
   377                           	signat	_s2out,88
   378                           	line	46
   379  0027D                     _s2out:
   380  0027D  80 52              	j	f1431
   381  0027F                     f1430:
   382                           ;main.c: 45: void s2out()
   383                           
   384                           ;main.c: 46: {
   385                           
   386                           ;	var   _str2 assigned to ?a_s2out+0
   387                           ;main.c: 47: unsigned char *str2="222";
   388                           
   389                           	line	47
   390  0027F  75 24  01          	mov	?a_s2out+0,#high(0+u19)
   391  00282  75 25  10          	mov	?a_s2out+0+1,#low(0+u19)
   392                           ;	var   _i assigned to ?a_s2out+2
   393                           ;main.c: 48: unsigned int i;
   394                           
   395                           ;main.c: 49: P0=0xC6;
   396                           
   397                           	line	49
   398  00285  75 80 C6           	mov	080h,#198
   399                           ;main.c: 50: P2=0x1;
   400                           
   401                           	line	50
   402  00288  75 A0 01           	mov	0A0h,#1
   403                           ;main.c: 51: P2=0x0;
   404                           
   405                           	line	51
   406  0028B  75 A0 00           	mov	0A0h,#0
   407                           ;main.c: 54: for(i=0;i<3;i++)
   408                           
   409                           	line	54
   410  0028E  E4                 	clr	a
   411  0028F  F5 26              	mov	?a_s2out+2,a
   412  00291  F5 27              	mov	?a_s2out+2+1,a
   413  00293  E5 27              	mov	a,?a_s2out+2+1
   414  00295  24 FD              	add	a,#low -(3)
   415  00297  E5 26              	mov	a,?a_s2out+2
   416  00299  34 FF              	addc	a,#high -(3)
   417  0029B  50 02              	bnc	u141
   418  0029D  80 02              	jmp	u140
   419  0029F                     u141:
   420  0029F  80 02              	jmp	l21
   421  002A1                     u140:
   422  002A1  80 2D              	jmp	l22
   423                           	line	55
   424  002A3                     l21:
   425                           ;main.c: 55: {
   426                           
   427                           ;main.c: 56: P0 = str2[i];
   428                           
   429                           	line	56
   430  002A3  E5 27              	mov	a,?a_s2out+2+1
   431  002A5  25 25              	add	a,?a_s2out+0+1
   432  002A7  F5 82              	mov	dpl,a
   433  002A9  E5 26              	mov	a,?a_s2out+2
   434  002AB  35 24              	addc	a,?a_s2out+0
   435  002AD  F5 83              	mov	dph,a
   436                           	global	ldc_byte
   437  002AF  12 0003            	call	ldc_byte
   438  002B2  F5 80              	mov	080h,a
   439                           ;main.c: 57: P2=0x3;
   440                           
   441                           	line	57
   442  002B4  75 A0 03           	mov	0A0h,#3
   443                           ;main.c: 58: P2=0x2;
   444                           
   445                           	line	58
   446  002B7  75 A0 02           	mov	0A0h,#2
   447                           	line	54
   448  002BA  05 27              	inc	?a_s2out+2+1
   449  002BC  E5 27              	mov	a,?a_s2out+2+1
   450  002BE  70 02              	jnz	u150
   451  002C0  05 26              	inc	?a_s2out+2
   452  002C2                     u150:
   453  002C2  E5 27              	mov	a,?a_s2out+2+1
   454  002C4  24 FD              	add	a,#low -(3)
   455  002C6  E5 26              	mov	a,?a_s2out+2
   456  002C8  34 FF              	addc	a,#high -(3)
   457  002CA  50 02              	bnc	u161
   458  002CC  80 02              	jmp	u160
   459  002CE                     u161:
   460  002CE  80 D3              	jmp	l21
   461  002D0                     u160:
   462  002D0                     l22:
   463                           ;main.c: 59: }
   464                           
   465                           ;main.c: 60: }
   466                           
   467                           	line	60
   468  002D0                     l20:
   469  002D0  22                 	ret
   470  002D1                     f1431:
   471  002D1  80 AC              	j	f1430
   472                           	FNSIZE	_s2out,4,0
   473                           	global	?a_s2out
   474  0000                     f1432	equ	0
   475                           	global	_main
   476                           	signat	_main,88
   477                           	line	63
   478  002D3                     _main:
   479  002D3  80 4B              	j	f1441
   480  002D5                     f1440:
   481                           ;main.c: 62: void main()
   482                           
   483                           ;main.c: 63: {
   484                           
   485                           ;	var   _position assigned to ?a_main+0
   486                           ;main.c: 65: short position = 0;
   487                           
   488                           	line	65
   489  002D5  E4                 	clr	a
   490  002D6  F5 20              	mov	?a_main+0,a
   491  002D8  F5 21              	mov	?a_main+0+1,a
   492                           ;	var   _maxPosition assigned to ?a_main+2
   493                           ;main.c: 66: short maxPosition = 16;
   494                           
   495                           	line	66
   496  002DA  75 22  00          	mov	?a_main+2,#high(16)
   497  002DD  75 23  10          	mov	?a_main+2+1,#low(16)
   498                           ;main.c: 67: P0 = 0x38;
   499                           
   500                           	line	67
   501  002E0  75 80 38           	mov	080h,#56
   502                           ;main.c: 68: P2 = 0x1;
   503                           
   504                           	line	68
   505  002E3  75 A0 01           	mov	0A0h,#1
   506                           ;main.c: 69: P2 = 0x0;
   507                           
   508                           	line	69
   509  002E6  75 A0 00           	mov	0A0h,#0
   510                           ;main.c: 70: s2out();
   511                           
   512                           	FNCALL	_main,_s2out
   513                           	line	70
   514  002E9  12 027D            	lcall	_s2out
   515                           ;main.c: 71: while(1){
   516                           
   517                           	line	71
   518  002EC                     l26:
   519                           ;main.c: 72: s1out(position,maxPosition);
   520                           
   521                           	FNCALL	_main,_s1out
   522                           	line	72
   523  002EC  AA 22              	mov	r2,?a_main+2
   524  002EE  AB 23              	mov	r3,?a_main+2+1
   525  002F0  AC 20              	mov	r4,?a_main+0
   526  002F2  AD 21              	mov	r5,?a_main+0+1
   527  002F4  12 0114            	lcall	_s1out
   528                           
   529                           ;main.c: 73: if(position<maxPosition) position++
                                 ;
   530                           
   531                           	line	73
   532  002F7  C3                 	clr	c
   533  002F8  E5 21              	mov	a,?a_main+0+1
   534  002FA  95 23              	subb	a,?a_main+2+1
   535  002FC  85 22  F0          	mov	b,?a_main+2
   536  002FF  63 F0 80           	xrl	b,#80h
   537  00302  E5 20              	mov	a,?a_main+0
   538  00304  64 80              	xrl	a,#80h
   539  00306  95 F0              	subb	a,b
   540  00308  50 02              	bnc	u171
   541  0030A  80 02              	jmp	u170
   542  0030C                     u171:
   543  0030C  80 0A              	jmp	l28
   544  0030E                     u170:
   545  0030E  05 21              	inc	?a_main+0+1
   546  00310  E5 21              	mov	a,?a_main+0+1
   547  00312  70 02              	jnz	u180
   548  00314  05 20              	inc	?a_main+0
   549  00316                     u180:
   550  00316  80 05              	jmp	l29
   551                           	line	74
   552  00318                     l28:
   553                           ;main.c: 74: else
   554                           
   555                           ;main.c: 75: position=0;
   556                           
   557                           	line	75
   558  00318  E4                 	clr	a
   559  00319  F5 20              	mov	?a_main+0,a
   560  0031B  F5 21              	mov	?a_main+0+1,a
   561  0031D                     l29:
   562                           	line	77
   563  0031D                     l25:
   564                           	line	71
   565  0031D  80 CD              	jmp	l26
   566  0031F                     l27:
   567                           ;main.c: 77: }
   568                           
   569                           ;main.c: 78: }
   570                           
   571                           	line	78
   572  0031F                     l24:
   573  0031F  22                 	ret
   574  00320                     f1441:
   575  00320  80 B3              	j	f1440
   576                           	FNSIZE	_main,4,0
   577                           	global	?a_main
   578  0000                     f1442	equ	0
   579                           	psect	strings,class=CODE
   580                           	psect	strings
   581  00110                     u19:
   582  00110  32 32 32 00        	db	"222",0
   583  0000                     _A10	equ	162
   584  0000                     _A11	equ	163
   585  0000                     _A12	equ	164
   586  0000                     _A13	equ	165
   587  0000                     _A14	equ	166
   588  0000                     _A15	equ	167
   589  0000                     _A8	equ	160
   590  0000                     _A9	equ	161
   591  0000                     _AC	equ	214
   592  0000                     _ACC0	equ	224
   593  0000                     _ACC1	equ	225
   594  0000                     _ACC2	equ	226
   595  0000                     _ACC3	equ	227
   596  0000                     _ACC4	equ	228
   597  0000                     _ACC5	equ	229
   598  0000                     _ACC6	equ	230
   599  0000                     _ACC7	equ	231
   600  0000                     _AD0	equ	128
   601  0000                     _AD1	equ	129
   602  0000                     _AD2	equ	130
   603  0000                     _AD3	equ	131
   604  0000                     _AD4	equ	132
   605  0000                     _AD5	equ	133
   606  0000                     _AD6	equ	134
   607  0000                     _AD7	equ	135
   608  0000                     _B0	equ	240
   609  0000                     _B1	equ	241
   610  0000                     _B2	equ	242
   611  0000                     _B3	equ	243
   612+ 0000                     _B4	equ	244
   613+ 0000                     _B5	equ	245
   614  0000                     _B6	equ	246
   615  0000                     _B7	equ	247
   616  0000                     _CY	equ	215
   617  0000                     _EA	equ	175
   618  0000                     _ES	equ	172
   619  0000                     _ET0	equ	169
   620  0000                     _ET1	equ	171
   621  0000                     _EX0	equ	168
   622  0000                     _EX1	equ	170
   623  0000                     _F0	equ	213
   624  0000                     _IE0	equ	137
   625  0000                     _IE1	equ	139
   626  0000                     _INT0	equ	178
   627  0000                     _INT1	equ	179
   628  0000                     _IT0	equ	136
   629  0000                     _IT1	equ	138
   630  0000                     _OV	equ	210
   631  0000                     _P	equ	208
   632  0000                     _P00	equ	128
   633  0000                     _P01	equ	129
   634  0000                     _P02	equ	130
   635  0000                     _P03	equ	131
   636  0000                     _P04	equ	132
   637  0000                     _P05	equ	133
   638  0000                     _P06	equ	134
   639  0000                     _P07	equ	135
   640  0000                     _P10	equ	144
   641  0000                     _P11	equ	145
   642  0000                     _P12	equ	146
   643  0000                     _P13	equ	147
   644  0000                     _P14	equ	148
   645  0000                     _P15	equ	149
   646  0000                     _P16	equ	150
   647  0000                     _P17	equ	151
   648  0000                     _P20	equ	160
   649  0000                     _P21	equ	161
   650  0000                     _P22	equ	162
   651  0000                     _P23	equ	163
   652  0000                     _P24	equ	164
   653  0000                     _P25	equ	165
   654  0000                     _P26	equ	166
   655  0000                     _P27	equ	167
   656  0000                     _P30	equ	176
   657  0000                     _P31	equ	177
   658  0000                     _P32	equ	178
   659  0000                     _P33	equ	179
   660  0000                     _P34	equ	180
   661  0000                     _P35	equ	181
   662  0000                     _P36	equ	182
   663  0000                     _P37	equ	183
   664  0000                     _PS	equ	188
   665  0000                     _PT0	equ	185
   666  0000                     _PT1	equ	187
   667  0000                     _PX0	equ	184
   668  0000                     _PX1	equ	186
   669  0000                     _RB8	equ	154
   670  0000                     _RD	equ	183
   671  0000                     _REN	equ	156
   672  0000                     _RI	equ	152
   673  0000                     _RS0	equ	211
   674  0000                     _RS1	equ	212
   675  0000                     _RXD	equ	176
   676  0000                     _SM0	equ	159
   677  0000                     _SM1	equ	158
   678  0000                     _SM2	equ	157
   679  0000                     _T0	equ	180
   680  0000                     _T1	equ	181
   681  0000                     _TB8	equ	155
   682  0000                     _TF0	equ	141
   683  0000                     _TF1	equ	143
   684  0000                     _TI	equ	153
   685  0000                     _TR0	equ	140
   686  0000                     _TR1	equ	142
   687  0000                     _TXD	equ	177
   688  0000                     _WR	equ	182
   689  0000                     _ACC	equ	224
   690  0000                     _B	equ	240
   691  0000                     _DPH	equ	131
   692  0000                     _DPL	equ	130
   693  0000                     _IE	equ	168
   694  0000                     _IP	equ	184
   695  0000                     _P0	equ	128
   696  0000                     _P1	equ	144
   697  0000                     _P2	equ	160
   698  0000                     _P3	equ	176
   699  0000                     _PCON	equ	135
   700  0000                     _PSW	equ	208
   701  0000                     _SBUF	equ	153
   702  0000                     _SCON	equ	152
   703  0000                     _SP	equ	129
   704  0000                     _TCON	equ	136
   705  0000                     _TH0	equ	140
   706  0000                     _TH1	equ	141
   707  0000                     _TL0	equ	138
   708  0000                     _TL1	equ	139
   709  0000                     _TMOD	equ	137
   710  0000                     _ACC_BITS	equ	224
   711  0000                     _B_BITS	equ	240
   712  0000                     _IE_BITS	equ	168
   713  0000                     _IP_BITS	equ	184
   714  0000                     _P0_BITS	equ	128
   715  0000                     _P1_BITS	equ	144
   716  0000                     _P2_BITS	equ	160
   717  0000                     _P3_BITS	equ	176
   718  0000                     _PCON_BITS	equ	135
   719  0000                     _PSW_BITS	equ	208
   720  0000                     _SCON_BITS	equ	152
   721  0000                     _TCON_BITS	equ	136
   722  0000                     _TMOD_BITS	equ	137


HI-TECH Software 8051 Macro Assembler V9.60                                Page 2
Symbol Table                                           Thu Mar 16 19:47:39 2023

       ?a_main 00020              _B 000F0              l3 00279  
            l4 001EA              l5 00182              _P 000D0  
            l6 001CD              l8 001BB              l9 00192  
      ?a_s1out 00024        ?a_s2out 00024             _B0 000F0  
           _B1 000F1             _B2 000F2             _B3 000F3  
           _B4 000F4             _B5 000F5             _B6 000F6  
           _A8 000A0             _B7 000F7             _A9 000A1  
           _F0 000D5             _AC 000D6             l10 001EC  
           l11 00227             l20 002D0             l21 002A3  
           l13 00215             l22 002D0             l14 001FC  
           _EA 000AF             l15 0022E             l24 0031F  
           l16 00279             l25 0031D             l26 002EC  
           l18 00267             l27 0031F             l19 0023E  
           _P0 00080             l28 00318             _P1 00090  
           l29 0031D             _P2 000A0             _P3 000B0  
           _IE 000A8             _T0 000B4             _T1 000B5  
           _ES 000AC             _CY 000D7             _IP 000B8  
           _RD 000B7             u10 00162             u11 0015F  
           u20 00190             u12 0015B             _RI 00098  
           u21 0018E             u30 0019A             u40 001BB  
           _TI 00099             u50 001CD             _PS 000BC  
           u19 00110             u51 001CB             _OV 000D2  
           u60 001FA             u52 001C7             u61 001F8  
           _SP 00081             u70 00204             u80 00215  
           u90 00227             u91 00225             u92 00221  
           _WR 000B6         _B_BITS 000F0            F158 00100  
          _A10 000A2            _A11 000A3            _A12 000A4  
          _A13 000A5            _A14 000A6            _A15 000A7  
          _AD0 00080            _AD1 00081            _AD2 00082  
          _AD3 00083            _AD4 00084            _AD5 00085  
          _AD6 00086            _AD7 00087            _ACC 000E0  
          _P00 00080            _P01 00081            _P10 00090  
          _P02 00082            _P11 00091            _P03 00083  
          _P20 000A0            _P12 00092            _P04 00084  
          _P21 000A1            _P13 00093            _P05 00085  
          _P30 000B0            _P22 000A2            _P14 00094  
          _P06 00086            _P31 000B1            _P23 000A3  
          _P15 00095            _P07 00087            _P32 000B2  
          _P24 000A4            _P16 00096            _P33 000B3  
          _P25 000A5            _P17 00097            _P34 000B4  
          _P26 000A6            _P35 000B5            _P27 000A7  
          _P36 000B6            _P37 000B7            _IE0 00089  
          _IE1 0008B            _ET0 000A9            _ET1 000AB  
          _EX0 000A8            _EX1 000AA            _DPH 00083  
          _DPL 00082            _IT0 00088            _IT1 0008A  
          _RB8 0009A            u100 0023C            u101 0023A  
          u110 00246            u120 00267            u130 00279  
          u131 00277            _TF0 0008D            _TB8 0009B  
          u140 002A1            u132 00273            _TF1 0008F  
          u141 0029F            u150 002C2            _TH0 0008C  
          u160 002D0            _TH1 0008D            u161 002CE  
          u170 0030E            u171 0030C            u180 00316  
          _SM0 0009F            _SM1 0009E            _TL0 0008A  
          _SM2 0009D            _PT0 000B9            _TL1 0008B  
          _PT1 000BB            _RS0 000D3            _RS1 000D4  
          _REN 0009C            _PX0 000B8            _PX1 000BA  
          _TR0 0008C            _TR1 0008E            _RXD 000B0  
          _PSW 000D0            _TXD 000B1        _P0_BITS 00080  
      _P1_BITS 00090        _P2_BITS 000A0        _P3_BITS 000B0  
      _IE_BITS 000A8       _ACC_BITS 000E0        _IP_BITS 000B8  
         f1410 00117           f1411 0027A           f1412 00000  
         f1430 0027F           f1431 002D1           f1440 002D5  
         f1432 00000           f1441 00320           f1442 00000  
         _ACC0 000E0           _ACC1 000E1           _ACC2 000E2  
         _ACC3 000E3           _ACC4 000E4           _ACC5 000E5  
         _ACC6 000E6           _ACC7 000E7  stack_internal 00001  
         _INT0 000B2           _INT1 000B3           _PCON 00087  
         _SCON 00098           _SBUF 00099           _TCON 00088  
         _TMOD 00089           _main 002D3       _PSW_BITS 000D0  
        _s1out 00114          _s2out 0027D        ldc_byte 00003  
    _PCON_BITS 00087      _SCON_BITS 00098      _TCON_BITS 00088  
      str_copy 0008C      _TMOD_BITS 00089  
